---
- name: Install Docker on All Nodes
  hosts: nodes
  become: yes
  gather_facts: yes
  
  vars:
    docker_users:
      - "{{ ansible_user }}"
  
  tasks:
    - name: Update apt package index
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        
    - name: Install required packages for Docker repository
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present
        
    - name: Create directory for Docker GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
        
    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        
    - name: Remove existing Docker repository if present
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: absent
        filename: docker
      ignore_errors: yes
      
    - name: Remove any existing Docker sources files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/apt/sources.list.d/docker.list
        - /etc/apt/sources.list.d/docker.sources
      ignore_errors: yes
        
    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        
    - name: Update apt package index after adding Docker repository
      ansible.builtin.apt:
        update_cache: yes
        
    - name: Install Docker Engine
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        
    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes
        daemon_reload: yes
        
    - name: Add users to docker group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop: "{{ docker_users }}"
      
    - name: Create Docker daemon configuration directory
      ansible.builtin.file:
        path: /etc/docker
        state: directory
        mode: '0755'
        
    - name: Configure Docker daemon
      ansible.builtin.copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m",
              "max-file": "3"
            },
            "storage-driver": "overlay2"
          }
        mode: '0644'
      notify: restart docker
      
    - name: Restart Docker to apply configuration
      ansible.builtin.systemd:
        name: docker
        state: restarted
        
    - name: Test Docker installation
      ansible.builtin.command:
        cmd: docker --version
      register: docker_version
      changed_when: false
      
    - name: Display Docker version
      ansible.builtin.debug:
        msg: "Docker installed successfully: {{ docker_version.stdout }}"
        
    - name: Test Docker functionality
      ansible.builtin.command:
        cmd: docker run --rm hello-world
      register: docker_test
      changed_when: false
      become_user: "{{ ansible_user }}"
      
    - name: Display Docker test result
      ansible.builtin.debug:
        msg: "Docker test completed successfully on {{ inventory_hostname }}"
      when: docker_test.rc == 0
      
    - name: Check if Docker Compose is working
      ansible.builtin.command:
        cmd: docker compose version
      register: compose_version
      changed_when: false
      
    - name: Display Docker Compose version
      ansible.builtin.debug:
        msg: "Docker Compose available: {{ compose_version.stdout }}"
        
    - name: Display installation summary
      ansible.builtin.debug:
        msg: |
          Docker installation completed on {{ inventory_hostname }}!
          
          Docker version: {{ docker_version.stdout }}
          Docker Compose: {{ compose_version.stdout }}
          
          User {{ ansible_user }} has been added to the docker group.
          You may need to log out and back in for group changes to take effect.
          
          Basic Docker commands:
          - docker --version
          - docker info
          - docker ps
          - docker images
          - docker run hello-world
          
  handlers:
    - name: restart docker
      ansible.builtin.systemd:
        name: docker
        state: restarted